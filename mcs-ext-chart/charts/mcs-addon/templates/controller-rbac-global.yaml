{{- with dict "Chart" .Chart "componentName" "controller" "Release" .Release "Values" .Values }}
{{- if eq .Values.global.installationType "global" }}
---
# global level rbac
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "mcs-addon.component_type_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
rules:
- apiGroups: [ multicluster.pandaria.io ]
  resources:
    - clustersets
    - clustersets/status
  verbs:
    - get
    - list
    - watch
    - update
    - patch
- apiGroups: [ rbac.authorization.k8s.io ]
  resources: 
    - rolebindings
    - roles
    - RoleBinding
    - clusterrolebindings
  verbs: [ "*" ]
- apiGroups: [ "" ]
  resources:
    - serviceaccounts
    - secrets
    - namespaces
  verbs: [ "*" ]
- apiGroups: [ "authorization.k8s.io" ]
  resources: [ "subjectaccessreviews" ]
  verbs: [ "create" ]
- apiGroups: [ apiextensions.k8s.io ]
  resources: [ customresourcedefinitions ]
  verbs: [ "*" ]
- apiGroups: [ rbac.authorization.k8s.io ]
  resources: [ clusterroles ]
  resourceNames: [ {{ template "mcs-addon.broker_role_name" . }} ]
  verbs: ["get"]
- apiGroups: ["management.cattle.io"]
  resources: ["clusters"]
  resourceNames: ["local"]
  verbs: ["get"]
- apiGroups: ["management.cattle.io"]
  resources: ["settings"]
  resourceNames: ["cacerts"]
  verbs: ["get"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices", "endpointslices/restricted"]
  verbs: ["create", "get", "list", "watch","patch", "update", "delete"]
- apiGroups: ["multicluster.x-k8s.io"]
  resources: ["*"]
  verbs: ["create", "get", "list", "watch", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "mcs-addon.component_type_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ template "mcs-addon.component_name" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ template "mcs-addon.component_type_name" . }}
  apiGroup: rbac.authorization.k8s.io
---
# fleet-default rbac
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "mcs-addon.component_type_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
  namespace: {{ .Values.global.cattle.provisioningNamespace }}
rules:
  - apiGroups: [ provisioning.cattle.io ]
    resources: [ clusters ]
    verbs:
      - get
      - list
      - watch
      - update
      - patch
---
# fleet-default rbac
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "mcs-addon.component_type_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
  namespace: {{ .Values.global.cattle.provisioningNamespace }}
subjects:
  - kind: ServiceAccount
    name: {{ template "mcs-addon.component_name" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ template "mcs-addon.component_type_name" . }}
  apiGroup: rbac.authorization.k8s.io
---
# working ns role to create lease
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "mcs-addon.component_type_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
rules:
- apiGroups: [ coordination.k8s.io ] 
  resources: [ leases ]
  verbs: [ "*" ]
---
# working ns rolebinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "mcs-addon.component_type_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ template "mcs-addon.component_name" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ template "mcs-addon.component_type_name" . }}
  apiGroup: rbac.authorization.k8s.io
---
# Rancher proxy access ClusterRole - predefined for all ClusterSet code use
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "mcs-addon.broker_role_name" . }}
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
rules:
  # Key permissions: allow access to clusters through Rancher proxy
  - apiGroups: ["management.cattle.io"]
    resources: ["clusters"]
    resourceNames: ["local"]
    verbs: ["get"] # Only get permission is sufficient
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices", "endpointslices/restricted"]
    verbs: ["create", "get", "list", "watch","patch", "update", "delete"]
  - apiGroups: ["multicluster.x-k8s.io"]
    resources: ["*"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "mcs-addon.component_name" . }}
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
  labels:
    {{- include "mcs-addon.chart_labels" . | nindent 4 }}
{{- end }}
{{- end }}